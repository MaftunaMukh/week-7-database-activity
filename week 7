{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNuDsyBvjWrpRl5I7CWK8gT",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MaftunaMukh/week-7-database-activity/blob/main/week%207\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TT2dPeI-60q5"
      },
      "outputs": [],
      "source": [
        "{\n",
        "  \"\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"r_set = my_conn.execute('''select name from sqlite_master where type = \\\"table\\\"''')\\n\",\n",
        "        \"for row in r_set:\\n\",\n",
        "        \"  print(row)\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        },\n",
        "        \"id\": \"HorunNGZWybp\",\n",
        "        \"outputId\": \"fb590a83-d0d6-43c8-e5a1-72b1570cce95\"\n",
        "      },\n",
        "      \"execution_count\": 24,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stdout\",\n",
        "          \"text\": [\n",
        "            \"('category',)\\n\",\n",
        "            \"('subcategory',)\\n\",\n",
        "            \"('student',)\\n\"\n",
        "          ]\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"r_set1 = my_conn.execute('''SELECT * from student''')\\n\",\n",
        "        \"for row in r_set1:\\n\",\n",
        "        \"  print(row)\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        },\n",
        "        \"id\": \"h92O7t8sjkep\",\n",
        "        \"outputId\": \"57f4a3c8-9324-461e-e8bd-e2f30cf832e0\"\n",
        "      },\n",
        "      \"execution_count\": 23,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stdout\",\n",
        "          \"text\": [\n",
        "            \"(1, 'John Deo', 'Four', 75, 'female')\\n\",\n",
        "            \"(2, 'Max Ruin', 'Three', 85, 'male')\\n\",\n",
        "            \"(3, 'Arnold', 'Three', 55, 'male')\\n\",\n",
        "            \"(4, 'Krish Star', 'Four', 60, 'female')\\n\",\n",
        "            \"(5, 'John Mike', 'Four', 60, 'female')\\n\",\n",
        "            \"(6, 'Alex John', 'Four', 55, 'male')\\n\",\n",
        "            \"(7, 'My John Rob', 'Five', 78, 'male')\\n\",\n",
        "            \"(8, 'Asruid', 'Five', 85, 'male')\\n\",\n",
        "            \"(9, 'Tes Qry', 'Six', 78, 'male')\\n\",\n",
        "            \"(10, 'Big John', 'Four', 55, 'female')\\n\",\n",
        "            \"(11, 'Ronald', 'Six', 89, 'female')\\n\",\n",
        "            \"(12, 'Recky', 'Six', 94, 'female')\\n\",\n",
        "            \"(13, 'Kty', 'Seven', 88, 'female')\\n\",\n",
        "            \"(14, 'Bigy', 'Seven', 88, 'female')\\n\",\n",
        "            \"(15, 'Tade Row', 'Four', 88, 'male')\\n\",\n",
        "            \"(16, 'Gimmy', 'Four', 88, 'male')\\n\",\n",
        "            \"(17, 'Tumyu', 'Six', 54, 'male')\\n\",\n",
        "            \"(18, 'Honny', 'Five', 75, 'male')\\n\",\n",
        "            \"(19, 'Tinny', 'Nine', 18, 'male')\\n\",\n",
        "            \"(20, 'Jackly', 'Nine', 65, 'female')\\n\",\n",
        "            \"(21, 'Babby John', 'Four', 69, 'female')\\n\",\n",
        "            \"(22, 'Reggid', 'Seven', 55, 'female')\\n\",\n",
        "            \"(23, 'Herod', 'Eight', 79, 'male')\\n\",\n",
        "            \"(24, 'Tiddy Now', 'Seven', 78, 'male')\\n\",\n",
        "            \"(25, 'Giff Tow', 'Seven', 88, 'male')\\n\",\n",
        "            \"(26, 'Crelea', 'Seven', 79, 'male')\\n\",\n",
        "            \"(27, 'Big Nose', 'Three', 81, 'female')\\n\",\n",
        "            \"(28, 'Rojj Base', 'Seven', 86, 'female')\\n\",\n",
        "            \"(29, 'Tess Played', 'Seven', 55, 'male')\\n\",\n",
        "            \"(30, 'Reppy Red', 'Six', 79, 'female')\\n\",\n",
        "            \"(31, 'Marry Toeey', 'Four', 88, 'male')\\n\",\n",
        "            \"(32, 'Binn Rott', 'Seven', 90, 'female')\\n\",\n",
        "            \"(33, 'Kenn Rein', 'Six', 96, 'female')\\n\",\n",
        "            \"(34, 'Gain Toe', 'Seven', 69, 'male')\\n\",\n",
        "            \"(35, 'Rows Noump', 'Six', 88, 'female')\\n\"\n",
        "          ]\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"# select record based on Id\\n\",\n",
        "        \"q= \\\"SELECT id, name, class, mark, sex FROM student WHERE id=8\\\"\\n\",\n",
        "        \"my_cursor = my_conn.execute(q)\\n\",\n",
        "        \"data_row = my_cursor.fetchone()\\n\",\n",
        "        \"#print(type(data_row))\\n\",\n",
        "        \"print(data_row[0], data_row[1], data_row[3])\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        },\n",
        "        \"id\": \"luUGkS1sW-1G\",\n",
        "        \"outputId\": \"df943f12-9eba-41f0-fc51-e833610c084e\"\n",
        "      },\n",
        "      \"execution_count\": 25,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stdout\",\n",
        "          \"text\": [\n",
        "            \"8 Asruid 85\\n\"\n",
        "          ]\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"# Show 10 records only\\n\",\n",
        "        \"q=\\\"SELECT id, name, class, mark, sex FROM student limit 0,10\\\"\\n\",\n",
        "        \"my_cursor = my_conn.execute(q)\\n\",\n",
        "        \"data_row=my_cursor.fetchall()\\n\",\n",
        "        \"print(type(data_row))\\n\",\n",
        "        \"print(\\\"No of records: \\\", len(data_row))\\n\",\n",
        "        \"for row in data_row:\\n\",\n",
        "        \"  print(row)\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        },\n",
        "        \"id\": \"We2ntaCHXjZs\",\n",
        "        \"outputId\": \"4e0efe1e-0096-465e-ec34-91187b9a87f3\"\n",
        "      },\n",
        "      \"execution_count\": 26,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stdout\",\n",
        "          \"text\": [\n",
        "            \"<class 'list'>\\n\",\n",
        "            \"No of records:  10\\n\",\n",
        "            \"(1, 'John Deo', 'Four', 75, 'female')\\n\",\n",
        "            \"(2, 'Max Ruin', 'Three', 85, 'male')\\n\",\n",
        "            \"(3, 'Arnold', 'Three', 55, 'male')\\n\",\n",
        "            \"(4, 'Krish Star', 'Four', 60, 'female')\\n\",\n",
        "            \"(5, 'John Mike', 'Four', 60, 'female')\\n\",\n",
        "            \"(6, 'Alex John', 'Four', 55, 'male')\\n\",\n",
        "            \"(7, 'My John Rob', 'Five', 78, 'male')\\n\",\n",
        "            \"(8, 'Asruid', 'Five', 85, 'male')\\n\",\n",
        "            \"(9, 'Tes Qry', 'Six', 78, 'male')\\n\",\n",
        "            \"(10, 'Big John', 'Four', 55, 'female')\\n\"\n",
        "          ]\n",
        "        },\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stderr\",\n",
        "          \"text\": [\n",
        "            \"ERROR:sqlalchemy.pool.impl.NullPool:Exception during reset or similar\\n\",\n",
        "            \"Traceback (most recent call last):\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py\\\", line 753, in _finalize_fairy\\n\",\n",
        "            \"    fairy._reset(pool)\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py\\\", line 1004, in _reset\\n\",\n",
        "            \"    pool._dialect.do_rollback(self)\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py\\\", line 683, in do_rollback\\n\",\n",
        "            \"    dbapi_connection.rollback()\\n\",\n",
        "            \"sqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id 140317387618176 and this is thread id 140316956694272.\\n\",\n",
        "            \"ERROR:sqlalchemy.pool.impl.NullPool:Exception closing connection <sqlite3.Connection object at 0x7f9e0cdfaf10>\\n\",\n",
        "            \"Traceback (most recent call last):\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py\\\", line 753, in _finalize_fairy\\n\",\n",
        "            \"    fairy._reset(pool)\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py\\\", line 1004, in _reset\\n\",\n",
        "            \"    pool._dialect.do_rollback(self)\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py\\\", line 683, in do_rollback\\n\",\n",
        "            \"    dbapi_connection.rollback()\\n\",\n",
        "            \"sqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id 140317387618176 and this is thread id 140316956694272.\\n\",\n",
        "            \"\\n\",\n",
        "            \"During handling of the above exception, another exception occurred:\\n\",\n",
        "            \"\\n\",\n",
        "            \"Traceback (most recent call last):\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/pool/base.py\\\", line 255, in _close_connection\\n\",\n",
        "            \"    self._dialect.do_terminate(connection)\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py\\\", line 689, in do_terminate\\n\",\n",
        "            \"    self.do_close(dbapi_connection)\\n\",\n",
        "            \"  File \\\"/usr/local/lib/python3.7/dist-packages/sqlalchemy/engine/default.py\\\", line 692, in do_close\\n\",\n",
        "            \"    dbapi_connection.close()\\n\",\n",
        "            \"sqlite3.ProgrammingError: SQLite objects created in a thread can only be used in that same thread. The object was created in thread id 140317387618176 and this is thread id 140316956694272.\\n\"\n",
        "          ]\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"# Delete sample table student\\n\",\n",
        "        \"from sqlalchemy.exc import SQLAlchemyError\\n\",\n",
        "        \"try:\\n\",\n",
        "        \"  my_conn.execute('''DROP table student;''')\\n\",\n",
        "        \"  print(\\\"student table deleted\\\")\\n\",\n",
        "        \"except SQLAlchemyError as e:\\n\",\n",
        "        \"  #print(e)\\n\",\n",
        "        \"  error = str(e.__dict__['orig'])\\n\",\n",
        "        \"  print(error)\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        },\n",
        "        \"id\": \"pc5aLD8qYKjo\",\n",
        "        \"outputId\": \"54e11441-9b18-458c-daf9-9c5c47871716\"\n",
        "      },\n",
        "      \"execution_count\": 27,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stdout\",\n",
        "          \"text\": [\n",
        "            \"student table deleted\\n\"\n",
        "          ]\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"# creating student table\\n\",\n",
        "        \"from sqlalchemy.exc import SQLAlchemyError\\n\",\n",
        "        \"try:\\n\",\n",
        "        \"  my_conn.execute('''\\n\",\n",
        "        \"      CREATE TABLE IF NOT EXISTS student(id integer primary key,\\n\",\n",
        "        \"                      name text, class text, mark integer, sex text);\\n\",\n",
        "        \"                      ''')\\n\",\n",
        "        \"  print(\\\"Student Table created successfully\\\")\\n\",\n",
        "        \"except SQLAlchemyError as e:\\n\",\n",
        "        \"  #print(e)\\n\",\n",
        "        \"  error = str(e.__dict__['orig'])\\n\",\n",
        "        \"  print(error)\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"colab\": {\n",
        "          \"base_uri\": \"https://localhost:8080/\"\n",
        "        },\n",
        "        \"id\": \"2i5MswYxYqtJ\",\n",
        "        \"outputId\": \"01fc6ce6-8a14-43af-ca0f-d94e890ffae0\"\n",
        "      },\n",
        "      \"execution_count\": 28,\n",
        "      \"outputs\": [\n",
        "        {\n",
        "          \"output_type\": \"stream\",\n",
        "          \"name\": \"stdout\",\n",
        "          \"text\": [\n",
        "            \"Student Table created successfully\\n\"\n",
        "          ]\n",
        "        }\n",
        "      ]\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"# add records to student table\\n\",\n",
        "        \"r_set = my_conn.execute('''INSERT INTO 'student' ('id','name','class','mark','sex') VALUES\\n\",\n",
        "        \"        (1, 'John Deo', 'Four', 75, 'female'),\\n\",\n",
        "        \"        (2, 'Max Ruin', 'Three', 85, 'male'),\\n\",\n",
        "        \"        (3, 'Arnold', 'Three', 55, 'male'),\\n\",\n",
        "        \"        (4, 'Krish Star', 'Four', 60, 'female'),\\n\",\n",
        "        \"        (5, 'John Mike', 'Four', 60, 'female'),\\n\",\n",
        "        \"        (6, 'Alex John', 'Four', 55, 'male'),\\n\",\n",
        "        \"        (7, 'My John Rob', 'Five', 78, 'male'),\\n\",\n",
        "        \"        (8, 'Asruid', 'Five', 85, 'male'),\\n\",\n",
        "        \"        (9, 'Tes Qry', 'Six', 78, 'male'),\\n\",\n",
        "        \"        (10, 'Big John', 'Four', 55, 'female'),\\n\",\n",
        "        \"        (11, 'Ronald', 'Six', 89, 'female'),\\n\",\n",
        "        \"        (12, 'Big Nose', 'Three', 81, 'female'),\\n\",\n",
        "        \"        (13, 'Rojj Base', 'Seven', 86, 'female'),\\n\",\n",
        "        \"        (14, 'Tess Played', 'Seven', 55, 'male'),\\n\",\n",
        "        \"        (15, 'Reppy Red', 'Six', 79, 'female'),\\n\",\n",
        "        \"        (16, 'Marry Toeey', 'Four', 88, 'male'),\\n\",\n",
        "        \"        (17, 'Binn Rott', 'Seven', 90, 'female'),\\n\",\n",
        "        \"        (18, 'Kenn Rein', 'Six', 96, 'female'),\\n\",\n",
        "        \"        (19, 'Gain Toe', 'Seven', 69, 'male'),\\n\",\n",
        "        \"        (20, 'Rows Noump', 'Six', 88, 'female'); ''')\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"id\": \"h9pBiLPNZZKU\"\n",
        "      },\n",
        "      \"execution_count\": 29,\n",
        "      \"outputs\": []\n",
        "    },\n",
        "    {\n",
        "      \"cell_type\": \"code\",\n",
        "      \"source\": [\n",
        "        \"from sqlalchemy import create_engine\\n\",\n",
        "        \"my_conn = create_engine(\\\"sqlite:////content/my_db2.db\\\")\\n\",\n",
        "        \"conn = my_conn.connect()\"\n",
        "      ],\n",
        "      \"metadata\": {\n",
        "        \"id\": \"MYnMITWIbmbQ\"\n",
        "      },\n",
        "      \"execution_count\": 30,\n",
        "      \"outputs\": []\n",
        "    }\n",
        "  ]\n"
      ]
    }
  ]
}